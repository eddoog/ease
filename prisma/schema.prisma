// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PELANGGAN
  PENGELOLA_LAUNDRY
}

enum Status {
  MENUNGGU_KONFIRMASI
  DIPROSES
  DIKIRIM
  SELESAI
}

enum Tags {
  SEPATU
  BAJU
  SEPRAI
  JAKET
}

enum Days {
  SENIN
  SELASA
  RABU
  KAMIS
  JUMAT
  SABTU
  MINGGU
}

model User {
  id               String            @id @default(uuid())
  email            String            @unique
  name             String
  password         String
  address          String?
  image            String?
  role             Role              @default(PELANGGAN)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  Pelanggan        Pelanggan?
  PengelolaLaundry PengelolaLaundry?
}

model Pelanggan {
  userId  String    @unique
  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Pesanan Pesanan[]
}

model PengelolaLaundry {
  userId            String              @unique
  deskripsi         String?
  user              User                @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  jadwalOperasional JadwalOperasional[]

  Pesanan   Pesanan[]
  Pemasukan Pemasukan[]
  Penilaian Penilaian[]
}

model Pesanan {
  id           String    @id @default(uuid())
  berat        Float?
  harga        Float?
  status       Status?   @default(MENUNGGU_KONFIRMASI)
  waktuPesanan DateTime? @default(now())

  pelangganId        String
  pelanggan          Pelanggan        @relation(fields: [pelangganId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  pengelolaLaundryId String
  pengelolaLaundry   PengelolaLaundry @relation(fields: [pengelolaLaundryId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
}

model JadwalOperasional {
  id                 Int              @id @default(autoincrement())
  hari               Days
  jamBuka            String
  jamTutup           String
  pengelolaLaundryId String
  pengelolaLaundry   PengelolaLaundry @relation(fields: [pengelolaLaundryId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
}

model Pemasukan {
  id                 Int              @id @default(autoincrement())
  nominal            Float
  Date               DateTime         @default(now())
  pengelolaLaundryId String
  pengelolaLaundry   PengelolaLaundry @relation(fields: [pengelolaLaundryId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
}

model Penilaian {
  id     Int     @id @default(autoincrement())
  nilai  Int
  ulasan String?

  pengelolaLaundryId String
  pengelolaLaundry   PengelolaLaundry @relation(fields: [pengelolaLaundryId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
}
